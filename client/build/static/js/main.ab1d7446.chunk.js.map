{"version":3,"sources":["logo.svg","Register.js","Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Register","useState","name","dob","phone_num","email","address","photo_url","appt_time","values","setValues","formSubmitted","setFormSubmitted","error","setError","loading","setLoading","handleFormChange","key","value","console","log","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","uploadHandler","event","a","target","files","sendData","Object","entries","every","fetch","method","headers","body","JSON","stringify","response","json","data","Box","sx","width","display","justifyContent","Paper","elevation","padding","maxWidth","marginBottom","component","flexDirection","Button","variant","onClick","FormControl","InputLabel","htmlFor","OutlinedInput","id","onChange","e","required","label","LocalizationProvider","dateAdapter","DateAdapter","DesktopDatePicker","inputFormat","moment","utc","format","renderInput","params","TextField","alignItems","fontSize","color","Input","accept","style","type","marginRight","DateTimePicker","disabled","margin","Admin","submissions","setSubmissions","useEffect","Grid","container","spacing","map","cur","item","xs","sm","md","lg","backgroundColor","borderRadius","textAlign","className","src","diff","App","to","textDecoration","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab1d7446.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Fragment, useState} from 'react';\nimport Box from '@mui/material/Box';\nimport FormControl from '@mui/material/FormControl';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport TextField from '@mui/material/TextField';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport Button from '@mui/material/Button';\nimport { Paper } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport moment from 'moment';\n\nexport default function Register() {\n  const [values, setValues] = useState({\n    name: null,\n    dob: null,\n    phone_num: null,\n    email: null,\n    address: null,\n    photo_url: null,\n    appt_time: null,\n  });\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFormChange = (key, value) => {\n    setValues({...values, [key]: value});\n    console.log({...values, [key]: value});\n  };\n\n  const toBase64 = (file) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n\n  const uploadHandler = async(event) => {\n    console.log(event.target.files[0]);\n    if(event.target.files[0]) {\n      const file = await toBase64(event.target.files[0])\n      setValues({...values, photo_url: file});\n    } else {\n      setValues({...values, photo_url: null});\n    }\n  }\n\n  const sendData = async() => {\n    setLoading(true);\n    if(!Object.entries(values).every(([key, value]) => value)) {\n      setError('Please fill in all the fields before submitting!');\n      setLoading(false);\n      return;\n    }\n    const response = await fetch('/submit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values),\n    });\n    // waits until the request completes...\n    const data = await response.json();\n    if(!data?.error && !!error) {\n      setFormSubmitted(true);\n      setValues({\n        name: null,\n        dob: null,\n        phone_num: null,\n        email: null,\n        address: null,\n        photo_url: null,\n        appt_time: null,\n      })\n      setError(null);\n    } else {\n      setError(data.error);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <Box\n      sx={{\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <Paper \n        elevation={2} \n        sx={{\n          padding: '15px 50px', \n          maxWidth: '500px', \n          width: '100%',\n          marginBottom: '50px',\n        }}\n      >\n        <Box \n          component=\"form\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n          }}\n        >\n          <h2>Register</h2>\n          {!formSubmitted ?\n            <>\n              <FormControl>\n                <InputLabel htmlFor=\"name-outlined\">Name</InputLabel>\n                <OutlinedInput\n                  id=\"name-outlined\"\n                  onChange={(e) => handleFormChange('name', e.target.value)}\n                  required\n                  label=\"Name\"\n                  sx={{\n                    marginBottom: '25px',\n                  }}\n                />\n              </FormControl>\n              <FormControl sx={{marginBottom: '25px'}}>\n              <LocalizationProvider dateAdapter={DateAdapter}>\n                <DesktopDatePicker\n                  label=\"Date of Birth\"\n                  inputFormat=\"MM/DD/yyyy\"\n                  value={values.dob || null}\n                  onChange={(e) => handleFormChange('dob', moment.utc(e).format())}\n                  renderInput={(params) => <TextField {...params} />}\n                />\n              </LocalizationProvider>\n              </FormControl>\n              <FormControl>\n                <InputLabel htmlFor=\"phonenum-outlined\">Phone Number</InputLabel>\n                <OutlinedInput\n                  id=\"phonenum-outlined\"\n                  onChange={(e) => handleFormChange('phone_num', e.target.value)}\n                  required\n                  label=\"Phone Number\"\n                  sx={{\n                    marginBottom: '25px',\n                  }}\n                />\n              </FormControl>\n              <FormControl>\n                <InputLabel htmlFor=\"email-outlined\">Email</InputLabel>\n                <OutlinedInput\n                  id=\"email-outlined\"\n                  onChange={(e) => handleFormChange('email', e.target.value)}\n                  required\n                  label=\"Email\"\n                  sx={{\n                    marginBottom: '25px',\n                  }}\n                />\n              </FormControl>\n              <FormControl>\n                <InputLabel htmlFor=\"address-outlined\">Address</InputLabel>\n                <OutlinedInput\n                  id=\"address-outlined\"\n                  onChange={(e) => handleFormChange('address', e.target.value)}\n                  required\n                  label=\"Address\"\n                  sx={{\n                    marginBottom: '25px',\n                  }}\n                />\n              </FormControl>\n              <FormControl \n                sx={{\n                  marginBottom: '25px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'flex-start'\n                }}\n              >\n                <Box \n                  sx={{\n                    marginBottom: '5px', \n                    fontSize: '14px',\n                    color: 'rgba(0, 0, 0, 0.6)',\n\n                  }}\n                >\n                  Photo ID\n                </Box>\n                <Input\n                  accept=\"image/*\"\n                  style={{display: 'none'}}\n                  id=\"contained-button-file\"\n                  onChange={uploadHandler}\n                  type=\"file\"\n                />\n                <label htmlFor=\"contained-button-file\" style={{display: 'flex', alignItems: 'center'}}>\n                  <Button variant=\"contained\" component=\"span\" sx={{marginRight: '5px'}}>\n                    {`${values.photo_url ? 'Change Photo' : 'Upload'}`}\n                  </Button>\n                  {values.photo_url ? <CheckCircleIcon sx={{color: 'green'}} /> : null}\n                </label> \n              </FormControl>\n              <FormControl>\n                <LocalizationProvider dateAdapter={DateAdapter}>\n                  <DateTimePicker\n                    label=\"Appointment Time\"\n                    value={values.appt_time || null}\n                    onChange={(e) => handleFormChange('appt_time', moment.utc(e).format())}\n                    renderInput={(params) => <TextField {...params} />}\n                  />\n                </LocalizationProvider>\n              </FormControl>\n              {!!error ? <Box sx={{color: 'red'}}><h3>{error}</h3></Box> : null}\n              <Button \n                variant=\"contained\" \n                onClick={sendData}\n                disabled={!!loading}\n                sx={{\n                  margin: '25px 0',\n                }}\n              >\n                Submit \n              </Button>\n            </>\n          : \n          <Box>\n            <h3>Thank you for submitting a form!</h3>\n            <Button \n              variant=\"contained\" \n              onClick={() => setFormSubmitted(false)}\n              sx={{marginBottom: '35px'}}\n            >\n              Submit another form\n            </Button>\n          </Box>\n        }\n        </Box>\n      </Paper>\n    </Box>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport './Admin.css';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport moment from 'moment';\n\nexport default function Admin() {\n  const [submissions, setSubmissions] = useState([]);\n\n  useEffect(async() => {\n    const response = await fetch('/submissions');\n    const data = await response.json();\n    setSubmissions(data.submissions);\n  }, []);\n\n  return (\n    <Box sx={{\n        padding: '15px 100px',\n        '@media screen and (max-width: 600px)': {\n          padding: '15px 25px',\n        },\n      }}\n    >\n      <h2>Admin</h2>\n      <Grid container spacing={2}>\n        {submissions.map((cur) => {\n          const dob = moment(cur.dob);\n          const appt_time = moment(cur.appt_time);\n          return (\n            <Grid item xs={12} sm={6} md={4} lg={3} key={cur.dob}>\n              <Paper elevation={2}>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    backgroundColor: 'white',\n                    borderRadius: '4px',\n                    textAlign: 'left',\n                  }}\n                >\n                  <Box \n                    className=\"card-image\"\n                  >\n                    <img src={cur.photo_url} />\n                  </Box>\n                  <Box\n                    sx={{\n                      padding: '15px',\n                    }}\n                  >\n                    <Box className=\"name\">{cur.name}</Box>\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                        width: '100%',\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          marginRight: '20px',\n                        }}\n                      >\n                        <Box className=\"label\">Age</Box>\n                        <Box className=\"content\">{moment().diff(dob, 'years')}</Box>\n                      </Box>\n                      <Box\n                        sx={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                        }}\n                      >\n                        <Box className=\"label\">Date of Birth</Box>\n                        {console.log(dob)}\n                        <Box className=\"content\">{dob.format('MMMM DD yyyy')}</Box>\n                      </Box>\n                    </Box>\n                    <Box className=\"label\">Appointment Date & Time</Box>\n                    <Box className=\"content\">{appt_time.format('MMMM DD yyyy | HH:mm')}</Box>\n                    <Box className=\"label\">Address</Box>\n                    <Box className=\"content\">{cur.address}</Box>\n                    <Box className=\"label\">Phone Number</Box>\n                    <Box className=\"content\">{cur.phone_num}</Box>\n                    <Box className=\"label\">Email Address</Box>\n                    <Box className=\"content\">{cur.email}</Box>\n                  </Box>\n                </Box>\n              </Paper>\n            </Grid>\n          )\n        })}\n      </Grid>\n    </Box>\n  );\n}","import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Register from './Register';\nimport Admin from './Admin';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav>\n          <Box \n            sx={{\n              display: 'flex', \n              justifyContent: 'space-between', \n              alignItems: 'center', \n              padding: '25px 50px 0 50px',\n              '@media screen and (max-width: 600px)': {\n                padding: '15px',\n                flexDirection: 'column',\n              },\n            }}\n          >\n            <Box><Link to=\"/\"><h2>Patient Registration</h2></Link></Box>\n            <Box>\n              <Link to=\"/\"><Button sx={{textDecoration: 'none'}}>Home</Button></Link>\n              <Link to=\"/register\"><Button>Register</Button></Link>\n              <Link to=\"/admin\"><Button>Admin</Button></Link>\n            </Box>\n          </Box>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Routes>\n          <Route path=\"/admin\" element={<Admin />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/\" element={\n            <div>\n              <header className=\"App-header\">\n                <h2>Welcome to the patient registration website. Please register at the <Link to=\"/register\">register link</Link>. To see submissions, check the <Link to=\"/admin\">admin page</Link>.</h2>\n              </header>\n            </div>\n          } />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}